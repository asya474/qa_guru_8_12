{"name": "test_registration_form", "status": "broken", "statusDetails": {"message": "ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/LATEST_RELEASE_118.0.5993", "trace": "setup_browser = <selene.core.entity.Browser object at 0x00000225103F5150>\n\n    def test_registration_form(setup_browser):\n        user = User('Test',\n                    'Test',\n                    'test@test.com',\n                    'Male',\n                    '1234567890',\n                    '2001',\n                    'May',\n                    '15',\n                    'Computer Science',\n                    'Reading',\n                    'character.png',\n                    'Sugar Palace, a candy store in Ponyville',\n                    'NCR',\n                    'Delhi')\n        registration_page = RegistrationPage()\n>       registration_page.open()\n\ntest_registration_for_demo_qa.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\registration_page.py:8: in open\n    browser.open('/automation-practice-form')\n..\\..\\..\\venv\\Lib\\site-packages\\selene\\support\\shared\\browser.py:78: in open\n    self.config.get_or_create_driver().get(url)\n..\\..\\..\\venv\\Lib\\site-packages\\selene\\support\\shared\\config.py:281: in get_or_create_driver\n    return self._source.get_or_create()\n..\\..\\..\\venv\\Lib\\site-packages\\selene\\support\\shared\\config.py:129: in get_or_create\n    return self.create()\n..\\..\\..\\venv\\Lib\\site-packages\\selene\\support\\shared\\config.py:110: in create\n    self._stored = self._set_driver()\n..\\..\\..\\venv\\Lib\\site-packages\\selene\\support\\shared\\config.py:192: in <lambda>\n    lambda: self._set_chrome_or_firefox_from_webdriver_manager()\n..\\..\\..\\venv\\Lib\\site-packages\\selene\\support\\shared\\config.py:259: in _set_chrome_or_firefox_from_webdriver_manager\n    return {'chrome': get_chrome, 'firefox': get_firefox}.get(\n..\\..\\..\\venv\\Lib\\site-packages\\selene\\support\\shared\\config.py:243: in get_chrome\n    ).install()\n..\\..\\..\\venv\\Lib\\site-packages\\webdriver_manager\\chrome.py:37: in install\n    driver_path = self._get_driver_path(self.driver)\n..\\..\\..\\venv\\Lib\\site-packages\\webdriver_manager\\core\\manager.py:29: in _get_driver_path\n    binary_path = self.driver_cache.find_driver(driver)\n..\\..\\..\\venv\\Lib\\site-packages\\webdriver_manager\\core\\driver_cache.py:95: in find_driver\n    driver_version = driver.get_version()\n..\\..\\..\\venv\\Lib\\site-packages\\webdriver_manager\\core\\driver.py:42: in get_version\n    self.get_latest_release_version()\n..\\..\\..\\venv\\Lib\\site-packages\\webdriver_manager\\drivers\\chrome.py:44: in get_latest_release_version\n    resp = self._http_client.get(url=latest_release_url)\n..\\..\\..\\venv\\Lib\\site-packages\\webdriver_manager\\core\\http.py:33: in get\n    self.validate_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresp = <Response [404]>\n\n    @staticmethod\n    def validate_response(resp: requests.Response):\n        status_code = resp.status_code\n        if status_code == 404:\n>           raise ValueError(f\"There is no such driver by url {resp.url}\")\nE           ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/LATEST_RELEASE_118.0.5993\n\n..\\..\\..\\venv\\Lib\\site-packages\\webdriver_manager\\core\\http.py:15: ValueError"}, "attachments": [{"name": "log", "source": "889a7366-1692-4344-8bb8-b901c42dd254-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "bf499443-8007-4829-9fe8-32eb7f1ee5a9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b9ab95f7-0a8a-4e7a-b9ef-232d855bc4ef-attachment.txt", "type": "text/plain"}], "start": 1698508529554, "stop": 1698508530928, "uuid": "75a69139-95ce-43ed-9f34-b6c5a51fe1c4", "historyId": "41a3d7cc3b90b18a3ea25a4f364f8b9b", "testCaseId": "c4caa2b242595665ff03d028369c363c", "fullName": "tests.test_registration_for_demo_qa#test_registration_form", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_for_demo_qa"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "11324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_for_demo_qa"}]}